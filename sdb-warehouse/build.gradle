buildscript {
    ext {
        springJdbcVersion = '6.1.12'
        atomicosVersion = '6.0.0'
        retrofitVersion = '2.11.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "io.freefair.lombok" version "8.12.2"
}

repositories {
    mavenCentral()
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.3'
    compileOnly 'org.projectlombok:lombok:1.18.3'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Utils
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'org.apache.commons:commons-lang3:3.17.0'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // Rest
    implementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"

    // DB
    implementation "org.springframework:spring-jdbc:${springJdbcVersion}"
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation "com.atomikos:transactions-jta:${atomicosVersion}:jakarta"
    implementation "com.atomikos:transactions-hibernate4:${atomicosVersion}:jakarta"
    implementation "com.atomikos:transactions-jdbc:${atomicosVersion}"

    // Flyway
    implementation 'org.flywaydb:flyway-core:11.4.0'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.4.0'

    implementation project(":common-utils")

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.16.1'
}

test {
    useJUnitPlatform()
}

springBoot {
    mainClass = 'sdb.warehouse.SDBWarehouseApplication'
}

bootJar {
    archiveFileName.set('sdb-warehouse.jar')
} 